{"version":3,"sources":["data/DataHandler.js","components/Header.js","components/Filter.js","components/Footer.js","components/StudentDashboard.js","components/StudentView.js","components/Overview.js","App.js","serviceWorker.js","index.js"],"names":["DataHandler","requested","data","require","Set","map","student","name","program","task","Header","props","handleMenu","event","studentId","selectedStudent","scores","filter","object","showStudentScore","studentScoreFromChild","target","title","console","log","menu","students","key","id","style","cursor","onClick","Filter","handleClick","filterList","activeFilter","includes","shift","push","filterSwitchToState","item","dataToFilter","rawData","filteredDataToState","each","alterState","filterAllData","studentsFilter","className","tasksFilter","tasks","replace","substring","Footer","StudentDashboard","newStateItem","setState","filteredData","filtername","showScorePerProgram","type","state","scoreSom","reduce","acc","Math","round","fun","length","difficulty","funscore","difficultyscore","this","scoreFun","scoreTough","dashboardFunScore","dashboardToughScore","dashboardStudentScore","showScorePerStudent","theme","VictoryTheme","material","width","height","domainPadding","label","fixLabelOverlap","axisLabel","fontSize","padding","ticks","stroke","size","tickLabels","angle","offset","colorScale","animate","duration","onLoad","barWidth","fill","x","y","strokeWidth","labels","datum","React","Component","StudentView","studentScore","bind","newStudentScore","dataToChart","Overview","to","path","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0b78eb6f.chunk.js","sourcesContent":["//list of all student names\r\n\r\n//list of all tasks\r\n\r\n//object of student -> id, name, task, diff, fun\r\n\r\n//object of task, id, title, difficulty, fun\r\n\r\nfunction DataHandler(requested) {\r\n\tconst data = require('../data/students-feedback.json');\r\n\tswitch (requested) {\r\n\t\tcase 'raw':\r\n\t\t\treturn data;\r\n\r\n\t\tcase 'students':\r\n\t\t\treturn [...new Set(data.map(student => student.name))];\r\n\r\n\t\tcase 'program':\r\n\t\t\treturn [...new Set(data.map(program => program.task))];\r\n\t\t// return data.reduce((acc, item) => {\r\n\t\t// \tif (acc.includes(item.task)) {\r\n\t\t// \t\treturn acc;\r\n\t\t// \t} else {\r\n\t\t// \t\treturn acc.concat(item.task);\r\n\t\t// \t}\r\n\t\t// }, []);\r\n\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nexport default DataHandler;\r\n","import React from 'react';\r\n\r\nfunction Header(props) {\r\n\tconst showStudentScore = studentId => {\r\n\t\tlet selectedStudent = studentId;\r\n\t\tlet data = props.data;\r\n\t\t//const scores = data.filter(object => object.name === selectedStudent);\r\n\t\tconst scores = [\r\n\t\t\t...new Set(data.filter(object => object.name === selectedStudent))\r\n\t\t];\r\n\t\treturn {\r\n\t\t\tname: selectedStudent,\r\n\t\t\tscores: scores\r\n\t\t};\r\n\t};\r\n\r\n\tconst handleMenu = event => {\r\n\t\tlet studentScore = showStudentScore();\r\n\t\tprops.studentScoreFromChild(event.target.title);\r\n\t};\r\n\r\n\tconsole.log(props);\r\n\tconst menu = props.students.map(student => (\r\n\t\t<li\r\n\t\t\ttitle={student}\r\n\t\t\tkey={student + 'headermenu'}\r\n\t\t\tid={'name'}\r\n\t\t\tstyle={{ cursor: 'pointer' }}\r\n\t\t\tonClick={handleMenu}\r\n\t\t>\r\n\t\t\t{student}\r\n\t\t</li>\r\n\t));\r\n\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<nav>\r\n\t\t\t\t<ul>{menu}</ul>\r\n\t\t\t</nav>\r\n\t\t</header>\r\n\t);\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nfunction Filter(props) {\r\n\tfunction filterAllData(item, filter) {\r\n\t\tconst dataToFilter = props.rawData;\r\n\t\tlet filteredDataToState = '';\r\n\t\tif (item === 'name') {\r\n\t\t\t// filteredDataToState = dataToFilter.filter(each => each.name !== filter);\r\n\t\t\tfilteredDataToState = dataToFilter.filter(\r\n\t\t\t\teach => !props.activeFilter.includes(each.name)\r\n\t\t\t);\r\n\t\t} else if (item === 'task') {\r\n\t\t\t// filteredDataToState = dataToFilter.filter(each => each.task !== filter);\r\n\t\t\tfilteredDataToState = dataToFilter.filter(\r\n\t\t\t\teach => !props.activeFilter.includes(each.task)\r\n\t\t\t);\r\n\t\t}\r\n\t\tprops.alterState(filteredDataToState);\r\n\t}\r\n\r\n\tconst handleClick = event => {\r\n\t\tconst { title, id } = event.target;\r\n\t\t//filter data in charts by clicked filter\r\n\r\n\t\tlet filterList = props.activeFilter;\r\n\t\tif (!props.activeFilter.includes(title)) {\r\n\t\t\tfilterList.push(title);\r\n\t\t} else {\r\n\t\t\tfilterList.shift(title);\r\n\t\t}\r\n\t\tprops.filterSwitchToState(filterList);\r\n\t\tfilterAllData(id, title);\r\n\t};\r\n\tconst studentsFilter = props.students.map(student => (\r\n\t\t<li\r\n\t\t\tclassName={props.activeFilter.includes(student) ? 'inactive' : 'active'}\r\n\t\t\ttitle={student}\r\n\t\t\tkey={student}\r\n\t\t\tid={'name'}\r\n\t\t\tonClick={handleClick}\r\n\t\t\tstyle={{ cursor: 'pointer' }}\r\n\t\t>\r\n\t\t\t{student}\r\n\t\t</li>\r\n\t));\r\n\tconst tasksFilter = props.tasks.map(task => (\r\n\t\t<li\r\n\t\t\tclassName={props.activeFilter.includes(task) ? 'inactive' : 'active'}\r\n\t\t\ttitle={task}\r\n\t\t\tkey={task}\r\n\t\t\tid={'task'}\r\n\t\t\tonClick={handleClick}\r\n\t\t\tstyle={{ cursor: 'pointer' }}\r\n\t\t>\r\n\t\t\t{task.replace(/\\s/g, '').substring(0, 7)}\r\n\t\t</li>\r\n\t));\r\n\treturn (\r\n\t\t<div className={'filter'}>\r\n\t\t\t<h2>Filters:</h2>\r\n\t\t\t<h3>students</h3>\r\n\t\t\t<ul className='students-filter'>{studentsFilter}</ul>\r\n\t\t\t<h3>tasks</h3>\r\n\t\t\t<ul className='tasks-filter'>{tasksFilter}</ul>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n\treturn <footer></footer>;\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport DataHandler from '../data/DataHandler';\r\nimport Header from './Header';\r\nimport Filter from './Filter';\r\nimport Footer from './Footer';\r\n\r\nimport {\r\n\tVictoryBar,\r\n\tVictoryChart,\r\n\tVictoryAxis,\r\n\tVictoryTheme,\r\n\tVictoryGroup,\r\n\tVictoryLine\r\n} from 'victory';\r\n\r\nclass StudentDashboard extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tstudents: [...DataHandler('students')],\r\n\t\t\tprogram: [...DataHandler('program')],\r\n\t\t\trawData: [...DataHandler('raw')],\r\n\t\t\tfilteredData: [...DataHandler('raw')],\r\n\t\t\tactiveFilter: []\r\n\t\t};\r\n\r\n\t\tconsole.log('state: ', this.state.filteredData);\r\n\t}\r\n\talterState = newStateItem => {\r\n\t\tthis.setState({ filteredData: [...newStateItem] });\r\n\t};\r\n\tfilterSwitchToState = filtername => {\r\n\t\tthis.setState({ filter: [...filtername] });\r\n\t};\r\n\r\n\tshowScorePerProgram = type => {\r\n\t\tlet program = this.state.program;\r\n\t\tlet data = this.state.filteredData;\r\n\t\tconst scoreType = program.map(task => {\r\n\t\t\tconst scores = data.filter(object => object.task === task);\r\n\t\t\tconst scoreSom = scores.reduce((acc, object) => {\r\n\t\t\t\tswitch (type) {\r\n\t\t\t\t\tcase 'fun':\r\n\t\t\t\t\t\treturn Math.round((acc + object.fun / scores.length) * 100) / 100;\r\n\t\t\t\t\tcase 'tough':\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\tMath.round((acc + object.difficulty / scores.length) * 100) / 100\r\n\t\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}, 0);\r\n\t\t\tif (type === 'fun') {\r\n\t\t\t\treturn { task: task, funscore: scoreSom };\r\n\t\t\t}\r\n\t\t\tif (type === 'tough') {\r\n\t\t\t\treturn { task: task, difficultyscore: scoreSom };\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn scoreType;\r\n\t};\r\n\r\n\tshowScorePerStudent() {\r\n\t\tlet students = this.state.students;\r\n\t\tlet data = this.state.filteredData;\r\n\t\tconst studentScores = students.map(student => {\r\n\t\t\tconst scores = data.filter(object => object.name === student);\r\n\t\t\tconst scoreFun = scores.reduce((acc, object) => {\r\n\t\t\t\treturn Math.round((acc + object.fun / scores.length) * 100) / 100;\r\n\t\t\t}, 0);\r\n\t\t\tconst scoreTough = scores.reduce((acc, object) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\tMath.round((acc + object.difficulty / scores.length) * 100) / 100\r\n\t\t\t\t);\r\n\t\t\t}, 0);\r\n\r\n\t\t\treturn {\r\n\t\t\t\tname: student,\r\n\t\t\t\tfunscore: scoreFun,\r\n\t\t\t\tdifficultyscore: scoreTough\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\treturn studentScores;\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst dashboardFunScore = this.showScorePerProgram('fun');\r\n\t\tconst dashboardToughScore = this.showScorePerProgram('tough');\r\n\t\tconst dashboardStudentScore = this.showScorePerStudent();\r\n\t\tconsole.log(dashboardStudentScore);\r\n\r\n\t\treturn (\r\n\t\t\t<div className={'overview'}>\r\n\t\t\t\t<Filter\r\n\t\t\t\t\tstudents={this.state.students}\r\n\t\t\t\t\ttasks={this.state.program}\r\n\t\t\t\t\trawData={this.state.rawData}\r\n\t\t\t\t\tactiveFilter={this.state.activeFilter}\r\n\t\t\t\t\talterState={this.alterState}\r\n\t\t\t\t\tfilterSwitchToState={this.filterSwitchToState}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<div className={'charts'}>\r\n\t\t\t\t\t<VictoryChart\r\n\t\t\t\t\t\ttheme={VictoryTheme.material}\r\n\t\t\t\t\t\twidth={800}\r\n\t\t\t\t\t\theight={325}\r\n\t\t\t\t\t\tdomainPadding={1}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<VictoryAxis\r\n\t\t\t\t\t\t\tlabel='Overall scores per task'\r\n\t\t\t\t\t\t\ttheme={VictoryTheme.material}\r\n\t\t\t\t\t\t\tfixLabelOverlap={false}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\taxisLabel: { fontSize: 10, padding: 40 },\r\n\t\t\t\t\t\t\t\tticks: { stroke: 'grey', size: 5 },\r\n\t\t\t\t\t\t\t\ttickLabels: { fontSize: 5, padding: 5, angle: 45 }\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<VictoryGroup offset={10} colorScale={'qualitative'}>\r\n\t\t\t\t\t\t\t<VictoryBar\r\n\t\t\t\t\t\t\t\tanimate={{\r\n\t\t\t\t\t\t\t\t\tduration: 2000,\r\n\t\t\t\t\t\t\t\t\tonLoad: { duration: 1000 }\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tbarWidth={3}\r\n\t\t\t\t\t\t\t\theight={3}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tdata: { fill: '#c43a31' }\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tdata={dashboardFunScore}\r\n\t\t\t\t\t\t\t\tx='task'\r\n\t\t\t\t\t\t\t\ty='funscore'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<VictoryBar\r\n\t\t\t\t\t\t\t\tanimate={{\r\n\t\t\t\t\t\t\t\t\tduration: 2000,\r\n\t\t\t\t\t\t\t\t\tonLoad: { duration: 700 }\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tbarWidth={2}\r\n\t\t\t\t\t\t\t\theight={3}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tdata: { fill: '#00a8cc' }\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tdata={dashboardToughScore}\r\n\t\t\t\t\t\t\t\tx='task'\r\n\t\t\t\t\t\t\t\ty='difficultyscore'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</VictoryGroup>\r\n\t\t\t\t\t</VictoryChart>\r\n\t\t\t\t\t<VictoryChart width={800} height={225} domainPadding={0}>\r\n\t\t\t\t\t\t<VictoryAxis\r\n\t\t\t\t\t\t\tlabel='Overall scores per student'\r\n\t\t\t\t\t\t\ttheme={VictoryTheme.material}\r\n\t\t\t\t\t\t\tfixLabelOverlap={false}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\taxisLabel: { fontSize: 10, padding: 40 },\r\n\t\t\t\t\t\t\t\tticks: { stroke: 'grey', size: 5 },\r\n\t\t\t\t\t\t\t\ttickLabels: { fontSize: 9, padding: 5, angle: 45 }\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<VictoryLine\r\n\t\t\t\t\t\t\tanimate={{\r\n\t\t\t\t\t\t\t\tduration: 2000,\r\n\t\t\t\t\t\t\t\tonLoad: { duration: 1000 }\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t\t\tstroke: '#c43a31',\r\n\t\t\t\t\t\t\t\t\tstrokeWidth: 3\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tlabels: {\r\n\t\t\t\t\t\t\t\t\tfontSize: 15,\r\n\t\t\t\t\t\t\t\t\tfill: ({ datum }) => (datum.x === 3 ? '#000000' : '#c43a31')\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\theight={3}\r\n\t\t\t\t\t\t\tdata={dashboardStudentScore}\r\n\t\t\t\t\t\t\tx='name'\r\n\t\t\t\t\t\t\ty='funscore'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<VictoryLine\r\n\t\t\t\t\t\t\tanimate={{\r\n\t\t\t\t\t\t\t\tduration: 2000,\r\n\t\t\t\t\t\t\t\tonLoad: { duration: 1000 }\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t\t\tstroke: '#00a8cc',\r\n\t\t\t\t\t\t\t\t\tstrokeWidth: 3\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tlabels: {\r\n\t\t\t\t\t\t\t\t\tfontSize: 15,\r\n\t\t\t\t\t\t\t\t\tfill: ({ datum }) => (datum.x === 3 ? '#000000' : '#c43a31')\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\theight={3}\r\n\t\t\t\t\t\t\tdata={dashboardStudentScore}\r\n\t\t\t\t\t\t\tx='name'\r\n\t\t\t\t\t\t\ty='difficultyscore'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</VictoryChart>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Footer />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default StudentDashboard;\r\n","import React from 'react';\r\nimport DataHandler from '../data/DataHandler';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport {\r\n\tVictoryBar,\r\n\tVictoryChart,\r\n\tVictoryAxis,\r\n\tVictoryTheme,\r\n\tVictoryGroup,\r\n\tVictoryLine\r\n} from 'victory';\r\n\r\nclass StudentView extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tstudents: [...DataHandler('students')],\r\n\t\t\tprogram: [...DataHandler('program')],\r\n\t\t\trawData: [...DataHandler('raw')],\r\n\t\t\tactiveFilter: [],\r\n\t\t\tstudentScore: ''\r\n\t\t};\r\n\t\tthis.studentScoreFromChild = this.studentScoreFromChild.bind(this);\r\n\t}\r\n\r\n\tstudentScoreFromChild(newStudentScore) {\r\n\t\tthis.setState({ studentScore: 'test' });\r\n\t\tconsole.log(newStudentScore.name, this.state.studentScore);\r\n\t}\r\n\t// \tconsole.log('click', newStudentScore);\r\n\t// \tthis.setState({ studentScore: 'test' });\r\n\t// \tthis.dataToChart(newStudentScore.scores);\r\n\t// \tconsole.log(newStudentScore.name, this.state.studentScore);\r\n\t// }\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={'studentview'}>\r\n\t\t\t\t<Header\r\n\t\t\t\t\tstudents={this.state.students}\r\n\t\t\t\t\tdata={this.state.rawData}\r\n\t\t\t\t\tstudentScoreFromChild={this.studentScoreFromChild}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<VictoryChart\r\n\t\t\t\t\ttheme={VictoryTheme.material}\r\n\t\t\t\t\twidth={800}\r\n\t\t\t\t\theight={325}\r\n\t\t\t\t\tdomainPadding={1}\r\n\t\t\t\t>\r\n\t\t\t\t\t<VictoryAxis\r\n\t\t\t\t\t\tlabel='Overall scores per task'\r\n\t\t\t\t\t\ttheme={VictoryTheme.material}\r\n\t\t\t\t\t\tfixLabelOverlap={false}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\taxisLabel: { fontSize: 10, padding: 40 },\r\n\t\t\t\t\t\t\tticks: { stroke: 'grey', size: 5 },\r\n\t\t\t\t\t\t\ttickLabels: { fontSize: 5, padding: 5, angle: 45 }\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<VictoryGroup offset={10} colorScale={'qualitative'}>\r\n\t\t\t\t\t\t<VictoryBar\r\n\t\t\t\t\t\t\tanimate={{\r\n\t\t\t\t\t\t\t\tduration: 2000,\r\n\t\t\t\t\t\t\t\tonLoad: { duration: 700 }\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tbarWidth={2}\r\n\t\t\t\t\t\t\theight={3}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tdata: { fill: '#00a8cc' }\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tdata={this.dataToChart}\r\n\t\t\t\t\t\t\tx='task'\r\n\t\t\t\t\t\t\ty='difficulty'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<VictoryBar\r\n\t\t\t\t\t\t\tanimate={{\r\n\t\t\t\t\t\t\t\tduration: 2000,\r\n\t\t\t\t\t\t\t\tonLoad: { duration: 700 }\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tbarWidth={2}\r\n\t\t\t\t\t\t\theight={3}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tdata: { fill: '#c43a31' }\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tdata={this.dataToChart}\r\n\t\t\t\t\t\t\tx='task'\r\n\t\t\t\t\t\t\ty='fun'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</VictoryGroup>\r\n\t\t\t\t</VictoryChart>\r\n\r\n\t\t\t\t<Footer />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default StudentView;\r\n","import React from 'react';\r\nimport StudentDashboard from './StudentDashboard';\r\nimport StudentView from './StudentView';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nfunction Overview() {\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<h1>Student Dashboard</h1>\r\n\t\t\t<ul className='top-nav'>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<Link to='/StudentDashboard'>Dashboard</Link>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<Link to='/StudentView'>Studentview</Link>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path='/StudentDashBoard'>\r\n\t\t\t\t\t<StudentDashboard />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path='/StudentView'>\r\n\t\t\t\t\t<StudentView />\r\n\t\t\t\t</Route>\r\n\t\t\t</Switch>\r\n\t\t</Router>\r\n\t);\r\n}\r\n\r\nexport default Overview;\r\n","import './App.css';\r\nimport React from 'react';\r\nimport Overview from './components/Overview';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Overview />\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
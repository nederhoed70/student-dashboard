{"version":3,"sources":["data/DataHandler.js","components/Header.js","components/Filter.js","components/Footer.js","components/StudentDashboard.js","components/StudentView.js","components/Overview.js","App.js","serviceWorker.js","index.js"],"names":["DataHandler","requested","data","require","Set","map","student","name","reduce","acc","item","includes","task","concat","Header","props","handleMenu","event","showStudentScore","title","console","log","menu","students","key","id","style","cursor","onClick","Filter","handleClick","target","classList","backgroundColor","filter","dataToFilter","rawData","filteredDataToState","each","alterState","filterAllData","filterList","activeFilter","push","filterSwitchToState","studentsFilter","className","tasksFilter","tasks","replace","substring","Footer","StudentDashboard","newStateItem","setState","filtername","showScorePerProgram","type","program","state","scores","object","scoreSom","Math","round","fun","length","difficulty","funscore","difficultyscore","this","scoreFun","scoreTough","dashboardFunScore","dashboardToughScore","dashboardStudentScore","showScorePerStudent","theme","VictoryTheme","material","width","height","domainPadding","label","fixLabelOverlap","axisLabel","fontSize","padding","ticks","stroke","size","tickLabels","angle","offset","colorScale","animate","duration","onLoad","barWidth","fill","x","y","strokeWidth","labels","datum","React","Component","StudentView","individualStudentData","Overview","to","path","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.372a3d30.chunk.js","sourcesContent":["//list of all student names\r\n\r\n//list of all tasks\r\n\r\n//object of student -> id, name, task, diff, fun\r\n\r\n//object of task, id, title, difficulty, fun\r\n\r\nfunction DataHandler(requested) {\r\n\tconst data = require('../data/students-feedback.json');\r\n\tswitch (requested) {\r\n\t\tcase 'raw':\r\n\t\t\treturn data;\r\n\r\n\t\tcase 'students':\r\n\t\t\treturn [...new Set(data.map(student => student.name))];\r\n\r\n\t\tcase 'program':\r\n\t\t\treturn data.reduce((acc, item) => {\r\n\t\t\t\tif (acc.includes(item.task)) {\r\n\t\t\t\t\treturn acc;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn acc.concat(item.task);\r\n\t\t\t\t}\r\n\t\t\t}, []);\r\n\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nexport default DataHandler;\r\n","import React from 'react';\r\n\r\nfunction Header(props) {\r\n\tconst handleMenu = event => {\r\n\t\tprops.showStudentScore(event.title);\r\n\t};\r\n\tconsole.log(props);\r\n\tconst menu = props.students.map(student => (\r\n\t\t<li\r\n\t\t\ttitle={student}\r\n\t\t\tkey={student + 'headermenu'}\r\n\t\t\tid={'name'}\r\n\t\t\tstyle={{ cursor: 'pointer' }}\r\n\t\t\tonClick={handleMenu}\r\n\t\t>\r\n\t\t\t{student}\r\n\t\t</li>\r\n\t));\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<h1>Student Dashboard</h1>\r\n\t\t\t<nav>\r\n\t\t\t\t<ul>{menu}</ul>\r\n\t\t\t</nav>\r\n\t\t</header>\r\n\t);\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nfunction Filter(props) {\r\n\tfunction filterAllData(item, filter) {\r\n\t\tconst dataToFilter = props.rawData;\r\n\t\tlet filteredDataToState = '';\r\n\t\tif (item === 'name') {\r\n\t\t\tfilteredDataToState = dataToFilter.filter(each => each.name !== filter);\r\n\t\t} else if (item === 'task') {\r\n\t\t\tfilteredDataToState = dataToFilter.filter(each => each.task !== filter);\r\n\t\t}\r\n\t\tprops.alterState(filteredDataToState);\r\n\t}\r\n\r\n\tconst handleClick = event => {\r\n\t\tconst { title, id } = event.target;\r\n\t\tevent.target.classList = { backgroundColor: 'black' };\r\n\t\t//filter data in charts by clicked filter\r\n\t\tfilterAllData(id, title);\r\n\t\tlet filterList = props.activeFilter;\r\n\t\tfilterList.push(title);\r\n\t\tprops.filterSwitchToState(filterList);\r\n\t};\r\n\tconst studentsFilter = props.students.map(student => (\r\n\t\t<li\r\n\t\t\tclassName={props.activeFilter.includes(student) ? 'inactive' : 'active'}\r\n\t\t\ttitle={student}\r\n\t\t\tkey={student}\r\n\t\t\tid={'name'}\r\n\t\t\tonClick={handleClick}\r\n\t\t\tstyle={{ cursor: 'pointer' }}\r\n\t\t>\r\n\t\t\t{student}\r\n\t\t</li>\r\n\t));\r\n\tconst tasksFilter = props.tasks.map(task => (\r\n\t\t<li\r\n\t\t\tclassName={props.activeFilter.includes(task) ? 'inactive' : 'active'}\r\n\t\t\ttitle={task}\r\n\t\t\tkey={task}\r\n\t\t\tid={'task'}\r\n\t\t\tonClick={handleClick}\r\n\t\t\tstyle={{ cursor: 'pointer' }}\r\n\t\t>\r\n\t\t\t{task.replace(/\\s/g, '').substring(0, 7)}\r\n\t\t</li>\r\n\t));\r\n\treturn (\r\n\t\t<div className={'filter'}>\r\n\t\t\t<h2>Filters:</h2>\r\n\t\t\t<h3>students</h3>\r\n\t\t\t<ul className='students-filter'>{studentsFilter}</ul>\r\n\t\t\t<h3>tasks</h3>\r\n\t\t\t<ul className='tasks-filter'>{tasksFilter}</ul>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n\treturn <footer></footer>;\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport DataHandler from '../data/DataHandler';\r\nimport Header from './Header';\r\nimport Filter from './Filter';\r\nimport Footer from './Footer';\r\n\r\nimport {\r\n\tVictoryBar,\r\n\tVictoryChart,\r\n\tVictoryAxis,\r\n\tVictoryTheme,\r\n\tVictoryGroup,\r\n\tVictoryLine\r\n} from 'victory';\r\n\r\nclass StudentDashboard extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tstudents: [...DataHandler('students')],\r\n\t\t\tprogram: [...DataHandler('program')],\r\n\t\t\trawData: [...DataHandler('raw')],\r\n\t\t\tactiveFilter: []\r\n\t\t};\r\n\r\n\t\tconsole.log('state: ', this.state);\r\n\t}\r\n\talterState = newStateItem => {\r\n\t\tthis.setState({ rawData: [...newStateItem] });\r\n\t};\r\n\tfilterSwitchToState = filtername => {\r\n\t\tthis.setState({ filter: [...filtername] });\r\n\t};\r\n\r\n\tshowScorePerProgram = type => {\r\n\t\tlet program = this.state.program;\r\n\t\tlet data = this.state.rawData;\r\n\t\tconst scoreType = program.map(task => {\r\n\t\t\tconst scores = data.filter(object => object.task === task);\r\n\t\t\tconst scoreSom = scores.reduce((acc, object) => {\r\n\t\t\t\tswitch (type) {\r\n\t\t\t\t\tcase 'fun':\r\n\t\t\t\t\t\treturn Math.round((acc + object.fun / scores.length) * 100) / 100;\r\n\t\t\t\t\tcase 'tough':\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\tMath.round((acc + object.difficulty / scores.length) * 100) / 100\r\n\t\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}, 0);\r\n\t\t\tif (type === 'fun') {\r\n\t\t\t\treturn { task: task, funscore: scoreSom };\r\n\t\t\t}\r\n\t\t\tif (type === 'tough') {\r\n\t\t\t\treturn { task: task, difficultyscore: scoreSom };\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn scoreType;\r\n\t};\r\n\r\n\tshowScorePerStudent() {\r\n\t\tlet students = this.state.students;\r\n\t\tlet data = this.state.rawData;\r\n\t\tconst studentScores = students.map(student => {\r\n\t\t\tconst scores = data.filter(object => object.name === student);\r\n\t\t\tconst scoreFun = scores.reduce((acc, object) => {\r\n\t\t\t\treturn Math.round((acc + object.fun / scores.length) * 100) / 100;\r\n\t\t\t}, 0);\r\n\t\t\tconst scoreTough = scores.reduce((acc, object) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\tMath.round((acc + object.difficulty / scores.length) * 100) / 100\r\n\t\t\t\t);\r\n\t\t\t}, 0);\r\n\r\n\t\t\treturn {\r\n\t\t\t\tname: student,\r\n\t\t\t\tfunscore: scoreFun,\r\n\t\t\t\tdifficultyscore: scoreTough\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\treturn studentScores;\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst dashboardFunScore = this.showScorePerProgram('fun');\r\n\t\tconst dashboardToughScore = this.showScorePerProgram('tough');\r\n\t\tconst dashboardStudentScore = this.showScorePerStudent();\r\n\t\tconsole.log(this.state);\r\n\r\n\t\treturn (\r\n\t\t\t<div className={'overview'}>\r\n\t\t\t\t<Filter\r\n\t\t\t\t\tstudents={this.state.students}\r\n\t\t\t\t\ttasks={this.state.program}\r\n\t\t\t\t\trawData={this.state.rawData}\r\n\t\t\t\t\tactiveFilter={this.state.activeFilter}\r\n\t\t\t\t\talterState={this.alterState}\r\n\t\t\t\t\tfilterSwitchToState={this.filterSwitchToState}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<div className={'charts'}>\r\n\t\t\t\t\t<VictoryChart\r\n\t\t\t\t\t\ttheme={VictoryTheme.material}\r\n\t\t\t\t\t\twidth={800}\r\n\t\t\t\t\t\theight={325}\r\n\t\t\t\t\t\tdomainPadding={1}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<VictoryAxis\r\n\t\t\t\t\t\t\tlabel='Overall scores per task'\r\n\t\t\t\t\t\t\ttheme={VictoryTheme.material}\r\n\t\t\t\t\t\t\tfixLabelOverlap={false}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\taxisLabel: { fontSize: 10, padding: 40 },\r\n\t\t\t\t\t\t\t\tticks: { stroke: 'grey', size: 5 },\r\n\t\t\t\t\t\t\t\ttickLabels: { fontSize: 5, padding: 5, angle: 45 }\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<VictoryGroup offset={10} colorScale={'qualitative'}>\r\n\t\t\t\t\t\t\t<VictoryBar\r\n\t\t\t\t\t\t\t\tanimate={{\r\n\t\t\t\t\t\t\t\t\tduration: 2000,\r\n\t\t\t\t\t\t\t\t\tonLoad: { duration: 1000 }\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tbarWidth={3}\r\n\t\t\t\t\t\t\t\theight={3}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tdata: { fill: '#c43a31' }\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tdata={dashboardFunScore}\r\n\t\t\t\t\t\t\t\tx='task'\r\n\t\t\t\t\t\t\t\ty='funscore'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<VictoryBar\r\n\t\t\t\t\t\t\t\tanimate={{\r\n\t\t\t\t\t\t\t\t\tduration: 2000,\r\n\t\t\t\t\t\t\t\t\tonLoad: { duration: 700 }\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tbarWidth={2}\r\n\t\t\t\t\t\t\t\theight={3}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tdata: { fill: '#00a8cc' }\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tdata={dashboardToughScore}\r\n\t\t\t\t\t\t\t\tx='task'\r\n\t\t\t\t\t\t\t\ty='difficultyscore'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</VictoryGroup>\r\n\t\t\t\t\t</VictoryChart>\r\n\t\t\t\t\t<VictoryChart width={800} height={225} domainPadding={0}>\r\n\t\t\t\t\t\t<VictoryAxis\r\n\t\t\t\t\t\t\tlabel='Overall scores per student'\r\n\t\t\t\t\t\t\ttheme={VictoryTheme.material}\r\n\t\t\t\t\t\t\tfixLabelOverlap={false}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\taxisLabel: { fontSize: 10, padding: 40 },\r\n\t\t\t\t\t\t\t\tticks: { stroke: 'grey', size: 5 },\r\n\t\t\t\t\t\t\t\ttickLabels: { fontSize: 9, padding: 5, angle: 45 }\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<VictoryLine\r\n\t\t\t\t\t\t\tanimate={{\r\n\t\t\t\t\t\t\t\tduration: 2000,\r\n\t\t\t\t\t\t\t\tonLoad: { duration: 1000 }\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t\t\tstroke: '#c43a31',\r\n\t\t\t\t\t\t\t\t\tstrokeWidth: 3\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tlabels: {\r\n\t\t\t\t\t\t\t\t\tfontSize: 15,\r\n\t\t\t\t\t\t\t\t\tfill: ({ datum }) => (datum.x === 3 ? '#000000' : '#c43a31')\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\theight={3}\r\n\t\t\t\t\t\t\tdata={dashboardStudentScore}\r\n\t\t\t\t\t\t\tx='name'\r\n\t\t\t\t\t\t\ty='funscore'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<VictoryLine\r\n\t\t\t\t\t\t\tanimate={{\r\n\t\t\t\t\t\t\t\tduration: 2000,\r\n\t\t\t\t\t\t\t\tonLoad: { duration: 1000 }\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t\t\tstroke: '#00a8cc',\r\n\t\t\t\t\t\t\t\t\tstrokeWidth: 3\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tlabels: {\r\n\t\t\t\t\t\t\t\t\tfontSize: 15,\r\n\t\t\t\t\t\t\t\t\tfill: ({ datum }) => (datum.x === 3 ? '#000000' : '#c43a31')\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\theight={3}\r\n\t\t\t\t\t\t\tdata={dashboardStudentScore}\r\n\t\t\t\t\t\t\tx='name'\r\n\t\t\t\t\t\t\ty='difficultyscore'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</VictoryChart>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Footer />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default StudentDashboard;\r\n","import React from 'react';\r\nimport DataHandler from '../data/DataHandler';\r\nimport Header from './Header';\r\nimport Filter from './Filter';\r\nimport Footer from './Footer';\r\nimport {\r\n\tVictoryBar,\r\n\tVictoryChart,\r\n\tVictoryAxis,\r\n\tVictoryTheme,\r\n\tVictoryGroup,\r\n\tVictoryLine\r\n} from 'victory';\r\n\r\nclass StudentView extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tstudents: [...DataHandler('students')],\r\n\t\t\tprogram: [...DataHandler('program')],\r\n\t\t\trawData: [...DataHandler('raw')],\r\n\t\t\tactiveFilter: []\r\n\t\t};\r\n\t}\r\n\tshowStudentScore() {\r\n\t\tlet selectedStudent = 'Evelyn';\r\n\t\tlet data = this.state.rawData;\r\n\t\tconst scores = data.filter(object => object.name === selectedStudent);\r\n\t\tconst scoreTough = scores.reduce((acc, object) => {\r\n\t\t\treturn Math.round((acc + object.difficulty / scores.length) * 100) / 100;\r\n\t\t}, 0);\r\n\r\n\t\treturn {\r\n\t\t\tname: selectedStudent,\r\n\t\t\tfunscore: scores,\r\n\t\t\tdifficultyscore: scoreTough\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\tconsole.log(this.showStudentScore());\r\n\t\tconst individualStudentData = this.showStudentScore();\r\n\t\treturn (\r\n\t\t\t<div className={'studentview'}>\r\n\t\t\t\t<Header\r\n\t\t\t\t\tstudents={this.state.students}\r\n\t\t\t\t\tshowStudentScore={this.showStudentScore}\r\n\t\t\t\t/>\r\n\t\t\t\t<h2>Evelyn</h2>\r\n\t\t\t\t<VictoryChart\r\n\t\t\t\t\ttheme={VictoryTheme.material}\r\n\t\t\t\t\twidth={800}\r\n\t\t\t\t\theight={325}\r\n\t\t\t\t\tdomainPadding={1}\r\n\t\t\t\t>\r\n\t\t\t\t\t<VictoryAxis\r\n\t\t\t\t\t\tlabel='Overall scores per task'\r\n\t\t\t\t\t\ttheme={VictoryTheme.material}\r\n\t\t\t\t\t\tfixLabelOverlap={false}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\taxisLabel: { fontSize: 10, padding: 40 },\r\n\t\t\t\t\t\t\tticks: { stroke: 'grey', size: 5 },\r\n\t\t\t\t\t\t\ttickLabels: { fontSize: 5, padding: 5, angle: 45 }\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<VictoryGroup offset={10} colorScale={'qualitative'}>\r\n\t\t\t\t\t\t<VictoryBar\r\n\t\t\t\t\t\t\tanimate={{\r\n\t\t\t\t\t\t\t\tduration: 2000,\r\n\t\t\t\t\t\t\t\tonLoad: { duration: 700 }\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tbarWidth={2}\r\n\t\t\t\t\t\t\theight={3}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tdata: { fill: '#00a8cc' }\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tdata={individualStudentData.funscore}\r\n\t\t\t\t\t\t\tx='task'\r\n\t\t\t\t\t\t\ty='difficulty'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<VictoryBar\r\n\t\t\t\t\t\t\tanimate={{\r\n\t\t\t\t\t\t\t\tduration: 2000,\r\n\t\t\t\t\t\t\t\tonLoad: { duration: 700 }\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tbarWidth={2}\r\n\t\t\t\t\t\t\theight={3}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tdata: { fill: '#c43a31' }\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tdata={individualStudentData.funscore}\r\n\t\t\t\t\t\t\tx='task'\r\n\t\t\t\t\t\t\ty='fun'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</VictoryGroup>\r\n\t\t\t\t</VictoryChart>\r\n\r\n\t\t\t\t<Footer />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default StudentView;\r\n","import React from 'react';\r\nimport StudentDashboard from './StudentDashboard';\r\nimport StudentView from './StudentView';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nfunction Overview() {\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<ul className='top-nav'>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<Link to='/StudentDashboard'>Dashboard</Link>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<Link to='/StudentView'>Studentview</Link>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path='/StudentDashBoard'>\r\n\t\t\t\t\t<StudentDashboard />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path='/StudentView'>\r\n\t\t\t\t\t<StudentView />\r\n\t\t\t\t</Route>\r\n\t\t\t</Switch>\r\n\t\t</Router>\r\n\t);\r\n}\r\n\r\nexport default Overview;\r\n","import './App.css';\nimport React from 'react';\nimport Overview from './components/Overview';\n\nfunction App() {\n\treturn (\n\t\t<>\n\t\t\t<Overview />\n\t\t</>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}